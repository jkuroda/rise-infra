---
- name: Ansibilize
  hosts: testhosts
  user: samyakp
  become: yes
  become_method: sudo
  vars: 
    key1: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCmBw/Pbn17rGWsX/hlRHxld/hAf7rCTWHh1bHrkqc0IyB09i+WpldwAAgI+hvwBoQHrVvgYA6tzdCv4CjO3PzaQIpeHxDMPB+gX91SIxGIewt77Z0jRHSP+8ehDMLgmQpzoycOt3MUCiwAPmgRs3T2aWXnHejAzepG4BT0DxpWpjUoMo3k4jPUu29ei0T1OxUBJp8YDpKtTxiBdAANGvRYJACWhOp+rD2iy+VXWYQWg/JEhiFwUxZEPjq8dL2VJ61snqGZmi9D9+qaf1sBFfaA3pFVIvcSJlF8lkWmQ7u/5b2N07uFv5sb9Bvj+Sgmz5a8HB/0KE3xdZj8xllkuIwI4eEn3LNA8451l/URrgF5pK7HHFNHcmalZcEMzv9JXTs/cqrSXSVZ7ZMpGclXCALa1x3aDoHAV4BCcoFjugTt3k3JvjYfyFc15VmUNPC2bYIhgwee7xLaFFQm48p+q3Cw5u0HOFoRrtQMas/ap5YITLgB0FwO/01Sg03LiDRDt+feO9HIi6PrVeSM7ZH+OWOTRzfMDVljefkM/Z5YcsFcJoLZL0KR9B2lnetc5dKUr1rhCfWt73GDBiyiSPHso3BylwDlbWtxq9cHsjBlJXS01wfwOCfdyBUddvCkISAXRe0m/pqqCBkd5phVP5XndUmK9SCFKESmSqURaLuoqW//DQ== jon@haribo'
    key2: 'ssh-dss AAAAB3NzaC1kc3MAAAEBAKuEIwjBkVB6bvEQWKK/0DO/2kbpVkN2gCCLwXGf1As/s7+twIUf3Ne1CAtPA6beulNexARw1TexXb642glonWSbmIqRXib1W5QpPEdy2XoJUA1SXrtc1issY7Wy86lzyftJ+8UACUrNPxevCyojv+E+waFOEG7fLSiJq1dHtnO5FJXdBUcFHCRFs40jFuGK1fDDdKgsgdZdckcjik7y+wplMy8wtTw15PYyuGTbhFnEpLy6G9PTlE2+1jvONzKYQa3jhFhuwkxzRZOVhphhcwV6/TF5lguRGdwqSbXul7ted/Qvp/RyA9HqjIdSyUJo8kI28AACSD4qc+9yI77n4r0AAAAVANuvecvFpaKXh/dLoP7TPmqrdUljAAABAEDL88VkdrUeIvcF5vWFWkkpR7cyaT9XCN9HcrG1+3qc4GOZBuktgMaCDSfndVYtCbdXQyKsSc+rRBczmwWOWAxLl0ZTII0XKP9K3PH/XCxi0BXDButba4fGLl/ZNRRKD8ONnbjwiWxzcvq7uWm2EP9TDg1zxLWydouwwfLKRpCBGiuXXR7opBFKgNczE7JWwAgEq9m5mVumuu3pvIE7eeaEZlGFbFSxqCmMcxd7KQ8Cza9Y8VFkaZ64GpfXswfUgYBeBymgc9hnpxsWcUdyyZ0Sp3oEJumfGWBJ+Czs8GLjT+TV6FJxJAaGraNLl0Vm806rzC9gJjWXzEl7gYMXsqkAAAEBAIJteFRHhawrDD0LDR6EXfC7UBpyuHjGcLLFj0iutui5Wu9ftzo7Yrbf6zX7rDYI4/nKvlmemZ11irJvvXxKDbdXd51XQieBWhdt5225V7lUqqC2WuKh0J2eyxo+wYoUSqoEldja5DJ6hXhcpJMnktXQEwqE74Q1X4h2FtySwria+U4hOvvNz+BucqURwjqScSUe9EIquJDRNyz0mUN6DO8euHW5EO413RQ9VCt6GbH7TGnl9QKihehnAKcYEs8Rld4HCAvMT3RLRmatYmIL2EahfW95YbKFHAqvfVmib5oj6PcYMcmK46XBxs8Zap5q/bm/mmDptUBzrXZ9VGcOoYU= jon@gir'
    key3: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAIAQC8QDSOIrqbpHDL178g9KQs/jAoE2sIg9A8+LHpWCgQAc1gmeczdsvB7zuQlsA7vY4+wUKwLTFbplddDdGRyzjcQEHVQHzT/TXFdtXUhK1Jv+JQPrBxuneUbUPiCWLBSu62OszGdRwOalA/qWa9zseXNeIzQGTzmXgbN9Ge+cQMifxOoJ2Mtt3aUORldBCS/bpcgHNiS7N2PMknLpzY7za4pzwVwe8gKQ6pC7zWoydp2LCjBuvwBytz8EpjCuonKK1AiEaa9WsmRoiUU8gtnp8UJWh/qIoUvdm3OKd+wKgnmwIS5yx8J9Zuqxsack6OmLM4OZbaKhDHuFhku2HGaA0VKXjho43lygmC6qijHzUiQIUS0gU0t4BF5LefaM1a4KEkXkajqXOZDk614kIcDA4h/00SMX285Tx0YRbwpmhGcL8jnpZglgYSioq4O2ikpMl+awpC65le/h0QFPKjx+Z3MxjkumOyWeujpfFe8gIvMLhkTknJMN0zB5fvZnDjmb+7anVAieiauVC2wJWFbXJF7faODRIdj2HmMWKpIYCFmd1EiItDfYaDsRADfNPVOzoX/hLk25uBa60ACb8PdkzxQJUN0ZNxaTGVnkw3EKL4RO81vJWRO6ays30AAuamYe/5aiASBwZ1IzR8ut3xdLXlk14MH9EOfZzRj8K0wDNlzu6r94uJwRUiRCgbGG6GUniFzkQbYN9E97AxNqMtawkheA40mNw8rmz3QYWY9HiQh8IUWOGUN5wiK/NLS1LT6vmSE1pfeunXCP8+ktA3UOBDmhKNoHh0iMWFBMLy9+gH6u3yYsRys613VbtLBckv3xGE5Tk/GHruZYTXlhU6b+x7bX4hB695LjfjHJHzMM/Ob67n7sP77ZrHuae0xipYfPrJT4y9YXBDKV0GoEQDlKY56dBILGHK8wpo0ttYVAQiDny/Tws7zAZI74xrPFJ5KM6ALxxg104tvRrnVhNW/ACdqePyudRudt4PqcM3VbvPlcBqO3ofAa9Y62F9YvLSJl1HVhZAz7tOVhb9+NZOgEyBEgkNLA86yspRe3Hvpp9iIybzwZ+ODM5W81IhdCFa6Kp/4wpiAItE2rz3GE6HUizpnUNUJCkSPN1T1EVNwMu55L8K4jLs7Ky1AfYY+LB0As9r8t+yL4rzqCS4AyAWwmkwOd5KGVtM6aqdsZs278egNR1nY12Xy4NMBkRcsqf3RMtvHgmI4FeE9yw7MM2Seg0p2eJ0Ak6pLqj9sq8W9rehNUhtao7FLUaLLP2qWyD0ZQjnYN3yv3FlJY27+Q3o1Vxl1oQA9Z2Vr16ursErHs14qplvRx/zbgijXthGiizKQqWddJo79hoWe/7nnTrhT0Lk3ALCxjkRn3XNAh+gDiATOvzOSN6KDs2VyocPFAYC2X28vkyLvLiEoF+CRLMN4FK18YgFcv2q7nLFlR9019us2oJiCi3ZAB1oxdf1NMaHK3cN3z1z+x49WFshxEYISEaWfJvqEiWvJrmMzDQg0LFjPkiDwrJiNCF2uzr4JMzqk3u6yvh3ygYlT9j8AzcM54ZFAozjrUoVFkdc1flc6hi2ndhX957IKpk4XRx3eP5asoe89+lagSQQlm2dLg48YjzmU5K3w50GH6zswLoZvDBv5BLlRQu4DCrg55jqdXiCPSm4cRgU3fGglNryCMRtIoS9qTlQNgjKJX9hICfsPiwUpN1+k6gvRN+G98fsmucJY5QWhNyIPhuj4T94wnF0EH2LGe6sBJGVTaQGcne9Mk45CTdn0A9jjfxpQcjOFDlURhMJzUjfP3zS55+QzA2CJDXM8QOIzKgqJWJiyvHz7+Okqi0nKtTIq+ZcoLGd2lYeuycpbbH5+8++HIcLWEMAzjQ95YS4bByqLzrhkXcl/5nEhDyOOPv3qn+EZCKqv0hCCnjj3MFz/Qguo+dku4UTwNtxS0/gvBvq0/tIu4ZV9S8hyOGLGSW6PxEMAz7PYx6lAdzpPzOTb/Eear24ctcrQMuAj4espxHDPiGHWjJcsRO7hnBPfcUyQcwh8X9HAlWFQmS1Q3fq2PZfW4EI4xxZkCONCAVlEJEBRwA0lN/leP0mbG87WjL9uEKQ2EtDa6G9hjssYfRwH0X8fpYBoShXBLxfBTONpsSaJnHmSp3BQXBfj4Qlp1VcVpOb6VOx6spI3iuIU9WdVkYzTdl7J4oMSCd+mPeI7cEtlUhDwQM6pR/iX90u2HWePNXL4F4rSer+O7e1NKFat6fs/ShvqkjGNFJnEY7e+51JgDVQT5CFoR/r0wpQ2sWD9i4wivFQ7FWWPd3d4Uk2YXeO99SkFW2unfeuaG244dBdxav2bjf8nuolcmUrhELbqVa15Tk+GEUtbJTEeMVz0MD5ayy7P4GdkauOv+4KIjVweqxAZhAenoSAnLT3YFgIg1vyOXNs5W5WlLuwtu0hMIDaOTtuyZdA8i8+qqf0hXZpn+udQD810WGfOBEEReCA0HbzHe6zJsuoXmep4onOxA8wlw+WDiUsj+rLPxSU1rRO2wK1rC0LG3jsJGgopSm8pmXIJUWrl5+zfP7e4udsfpoFaxZpds8shm4dMHBvk88x4D3tFdlFgCRRqv/s4z7F90j1NzNlDEsAebEMotYr7sy4PyRxM9eue/mjqXCUsEHE9vrLrWM5uBJRMhYEIJs/m4095aS+L+VnFpY1ibds512SccVAMr6ABRNuRgbc7GDKxKgyV2sOOFaXmQ== jon@saudade'
    key4: 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAoskd7aVK1Md/lIwxB85RXXnyUznOzbChIVM/nkjONuAoTjZLDlaaOfFE25lhna12ZjVVka54J217J0YWOqW0RHlvZAo09cUP/WkNscFaJ++ZWc+A2GRurxBtYdOb7X/ZfDpe52/blLhkmLB1PI0DFOcbnZLoAxN1QHEnbcRpbQLebZOc7ksB2dfhyHbuQSCt+xmOGnOpNdZ5Yf6y3b2r9Pq3Rk6yEonx/TE8dsNqnns3bHwO4GjIhkYmFJe8byemj3uRxCihXfv6P4N/FGYMGqrKIZu/920QTprzbAz9RjV7bMqrGACXOSDkP/eIz7RRHpXGUoFeXHDVESgnVdeq8Q== kilov@dhcp-37-91.eecs.berkeley.edu'
    key5: 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAoNSL14s4PK2xa+XpmG4pqQjQj8otqE3VqDsVOJ90R3OtDlWsWfhPGQaJy84PVHsmWETiGD6GUhIR4G6Zw6Ck6JTXfqrFOtEute/Z75FSGWVI7UYXyQTM+/nqLurPqhv/Gt+IlWg0VwxMlcjBg4koVj8xrV8unnjZMHlO1pEBiZVSrhCUFC/jSTNe4zpnPMvrIOmeTGKjaGfss0xfjWW5Im4tfgOsFSBYwvxJH+rTuJLOsB6y7dJTEEJ+KiGunGLtNpuKEEfGJ5+RoQe6wy56KRxJfNfk4c0pA9Ac7gTKTgrlK/9RqePxvFd8WWKlbdIZm028FqApoNbR8ckSr/sASw== kilov@dhcp-35-70.eecs.berkeley.edu'
    key6: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAEAQDRBo13lBRLbmKlRLU0uMkdvnaOvFPMXv6JhrtTs/jujj5+wx3m1FlO4/AVFcRLVZCOFZCKexFfftOqR/PFVRdL4Vdq9Wqg4ct/iP77p82R4F5V365IFnjQ2tvOgpui8n+6Ha6KzNXXN7yYQVZen9plD47JAedc+J0hcsmzI4bgug6Oz8vEiAI8IWcOVIYIUVTGV7IK2rk78jVNv1HLdoOID5Mf5k/u5J6xXjr9XOnLLkceDsOur2DJuNnD9N2fJ5UO5w9+edqAsc5oHTuSTTA/jguUY5rUoo2kSpLb2vkEzIYVkP/6DwLWOZaeoX5oLHqDYABgtDFxKeCdwoN0lJLWBDrbpwKei268xBZnmhqtSQeHWWf2ej5AQscIz9Af7j+JBfAfi8ML2RpIjAsWF438d5Brn+WVRXHmgVvYnV89ql1pRjpbMZCqiRTdPxVsFgtD4n1HdItfAckEI+WUXmpdVRgkQbjEOznowO7LBhzfrDEUzjyZpZQO0ppQNIC0MY0eulJaE1bOBg2udYUaOypbOKQiRGy1cCWRYFkBwYtYwVhFIxhldv8EcRjbmigHbsMA0cUtE4qYNMTFwC3GweUAUO2oCDgXrjdej9iuhpMGrW+WWmL7vnoRsotDKSau7mxW+MFOyBcT0DROUWCCcHCyYYP4QON3kLWhgl7VCcXSMgKopuGisbFPnWO2kshpK6J+70Yj4uuHXenzaJWwOQfUwtTp6LY2MF6cY2sem8J8p6y4EXkBZbNImsmjMm9i0T3RJpBBtEGaA3/ZZFGAYosziuFWwU1lmAqWWflVYhRNxCXHfdgrzqhH29yFXjfGFfztO3zJoa2fcIPxF7gO4zLPa9xS6HNlbtckE0lBs1491esmTR0D/aYaX9U04lKrd4tuz40r1ofZ7C+ozvGFLuJBE3maMEe75vV99ViX+V8yO1AhoESf4Wo/D9Bi50/KhTDw/HVX4InA0yktxsxekOHonXuH+F8dVH3bDr9X2yxI8MnZlu1NA/eTjZdW4hjWys8BHJZA/NhzUynpo25oegHwShqrCOCD8JW/10uOQsz1QW+6RCGixxcPq60EKTeVqh1pCEZporozO5wYZPU5xUc3vr0taAVa/dpLA16gFkamx5cFCp04rBxO/k74UZPhpECzrT40m8hvhWHwmSROT1VJsfks/ajz430R39pBmoxb7xZ4/ELPGWZgiRtL4JrLcUkGOKYablngrqrzJxPlDSgLqJr39u7dShCPNzDMDeWOmtMSLR2O8+OgFDmoNOC8d7IzOEGIqz6KbBW7bN+ueFDm9uSdvA9R5oT9YJjgK2ssz9okWg+uwv084oFgBK28uNCTaVatSsb6CHh9x+im4XjL jon@chompy'
    key7: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/hzP48fe+Cvcp1s/k9rfa56m+DK14GJZp86v3chrVci2IpizpsNvI86j7UbX+A+AEeWX9nw9OZ2LjmdMR8VlKxRRMBw0N6Xia2jL9yQm41wN7qvNer3q3jt6IfTT5WBj2xmJRZPWK0YF/v6gWniI98H4LS3eHcT0+Yrh3XHq7FFnSKRjYEMX2momJozUs2ukUZy6YLSuCSrMZZg70DBcsPYzDIvHkyPR+55nwl6Sj4pRo2e5sb7VqxbQid0/Z3T6P359g/T5HFksVvhajFztb522MI90dioTA+o9peIAPKVjA9TDBkQ4WDXXvDG+YQZjiHiYRcN/nMAI8MfLPBuU5BVnoShkCOvMtzXeCtXzSES9n/gjLhwoHaWshZYqd+2u0zho0OEY05YyLwEyuGKFDruAkZN8egSErj1J/YCkQmLQ5rHS2Dk/ERjC9i7n8ZOY5UhY1Vg61XNc9X5yKht0mzBgO7EarrpoBWh0IKKIuwO+vvC3YUWQUKCbycVUOlpjc7F+ivfrbNw0TYZWCKuWHp8Hx2FZiAHxBj4C8Zm58F8kH4Z7Wf1Ql1jV7uncOf63lHdWH54nGirxJhBZ0cSfpO2QfXcTKuIz05RCVe/+talLmV3AZBF+VBweYKNrw+QwuBlEadEWLmpD1q8x2V9eRM1hHajpz4/nOsUhCHTDXrQ== sknapp@ocelot.local'
  tasks:
    #-------- keys --------
    - name: create key directory
      file:
        path: /usr/.ssh/
        state: directory
        mode: 0700 
        recurse: yes
    - name: Create authorized_keys
      file: 
        path: /usr/.ssh/authorized_keys
        state: touch
        mode: 0600
    - lineinfile:
        path: /usr/.ssh/authorized_keys
        line: "{{item}}"
      with_items:
        - "{{key1}}"
        - "{{key2}}"
        - "{{key3}}"
        - "{{key4}}"
        - "{{key5}}"
        - "{{key6}}"
        - "{{key7}}"

   #-------- apt -----------

      - name: Add MegaCLI repo
        shell: echo "deb http://hwraid.le-vert.net/ubuntu xenial main" > /etc/apt/sources.list.d/hwraid.list
      - name: Adding MegaCLI apt key
        apt_key:
          keyserver: keyserver.ubuntu.com
          id: 6005210E23B3D3B4
          state: present
      - name: Add SBT repo
        shell: echo "deb https://dl.bintray.com/sbt/debian /" > /etc/apt/sources.list.d/sbt.list
      - name: Adding SBT apt key
        apt_key: 
          keyserver: keyserver.ubuntu.com 
          id: 642AC823
          state: present
      - name: fish
        apt_repository: 
          repo: ppa:fish-shell/release-2
          state: present
          update_cache: yes
      - name: Install Packages
        apt: pkg={{item}} state=present update_cache=yes #cache_valid_time=604800
        with_items:
         - fish
         - megacli
         - sbt
#-------- pkgs -----------

      - name: Generally Useful stuff
        apt: pkg={{item}} state=present update_cache=yes
        with_items:
          - git 
          - git-doc 
          - git-man 
          - gnuplot 
          - mosh 
          - subversion 
          - gdb 
          - ruby 
          - emacs 
          - cmake 
          - aws-status
          - curl 
          - lzop 
          - pbzip2 
          - pigz 
          - pssh 
          - unzip 
          - valgrind 
          - mbw
      - name: Generally Useful Libs
        apt: pkg={{item}} state=present update_cache=yes
        with_items:
          - libncursesw5-dev 
          - libncurses5-dev 
          - libssl-dev
          - libiomp5 
          - libiomp-dev 
          - libiomp-doc # Intel openMP libs
          - ffmpeg 
          - libfftw3-dev # useful imaging utlities
      - name: Generally useful for SW dev
        apt: pkg={{item}} state=present update_cache=yes
        with_items:
          - build-essential 
          - gettext 
          - autoconf 
          - pkg-config 
  #-------- gcc -----------

      - name: Get G++ repos
        apt_repository:
          repo: 'ppa:ubuntu-toolchain-r/test'
          state: present
          update_cache: yes
      - name: G++ compilers
        apt: pkg={{item}} state=present update_cache=yes
        with_items:
          - g++ 
          - cpp-doc
          - g++-5 
          - cpp-5-doc 
          - g++-6 
          - cpp-6-doc
          - g++-7 
          - cpp-7-doc

  #-------- llvm -----------
      - name: Clang 
        apt: pkg={{item}} state=present update_cache=yes
        with_items:
          - clang-4.0 
          - lldb-4.0 
          - llvm-4.0
      - name: Install
        shell: for x in `dpkg -L clang-4.0 libclang-common-4.0-dev libclang1-4.0:amd64 liblldb-4.0 liblldb-4.0-dev libllvm4.0:amd64 lldb-4.0 llvm-4.0 llvm-4.0-dev llvm-4.0-runtime python-lldb-4.0| grep ^/usr/bin/ | sed 's,^/usr/bin/,,;s,-4.0$,,'`; do update-alternatives --install /usr/bin/$x $x /usr/bin/$x-4.0 1; done # "ugly horrible hack"


  #-------- java -----------

      - name: Add Java 8 repository
        apt_repository: 
          repo: 'ppa:webupd8team/java'

      - name: Agree to oracle license
        debconf: name=oracle-java8-installer question=shared/accepted-oracle-license-v1-1 vtype=select value=true

      - name: Install Java versions
        apt: pkg={{item}} state=present update-cache=yes force=yes
        with_items:
          - oracle-java8-installer 
          - oracle-java8-unlimited-jce-policy
          - oracle-java9-installer 
          - oracle-java9-unlimited-jce-policy 
          - oracle-java8-set-default

 #-------- python -----------

      - name: Python general
        apt: pkg= {{item}} state=present update-cache=yes force=yes 
        with_items:
          - python-all-dev 
          - python3-all-dev
          - python-stdeb
          - python-nose

      - name: Python Analysis
        apt: pkg={{item}} state=present update-cache=yes force=yes
        with_items:
          - python-numpy 
          - python3-numpy 
          - python-numpy-doc
          - python-scipy 
          - python3-scipy 
          - python-scipy-doc
          - python-matplotlib 
          - python3-matplotlib 
          - python-matplotlib-data 
          - python-matplotlib-venn 
          - python-scitools 
          - python-matplotlib-doc

      - name: Python AWS
        apt: pkg={{item}} state=present update-cache=yes force=yes
        with_items:
          - aws-status 
          - awscli 
          - s3cmd

      - name: Python Virtualenv
        apt: pkg=virtualenv state=present update-cache=yes force=yes

   #-------- r-lang -----------
      
      - name: Add r-lang repo
        shell: echo "deb http://cran.cnr.berkeley.edu/bin/linux/ubuntu xenial/" > /etc/apt/sources.list.d/r-lang.list

      - name: Adding r-lang key
        apt_key:
          keyserver: keyserver.ubuntu.com
          id: E084DAB9
          state: present

      - name: Installing all approved r packages
        shell: apt-cache search r- | grep ^r- | grep -v dbg | awk '{print $1}' | grep -v jags | grep -v cummerbund | grep -v r-other-bio3d | xargs apt-get install -y

  #-------- ray -----------

      - name: Ray
        apt: pkg={{item}} state=present update-cache=yes force=yes
        with_items:
          - libboost-all-dev 
          - python-dev 
          - python3-dev
          - python-numpy 
          - python3-numpy
          - python-funcsigs 
          - python3-funcsigs
  
   #-------- bazel  -----------


     - name: Add bazel repo
       shell: echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" > /etc/apt/sources.list.d/bazel.list
     - name: Adding bazel key
       apt_key:
         url: https://bazel.build/bazel-release.pub.gpg
         state: present
     - name: Install bazel
       apt: pkg={{item}} state=present update-cache=yes force=yes 
       with_items:
         - bazel


#-------- locales  -----------
      - name: generate locale
        locale_gen:
          name: en_US.UTF-8
          state: present

#-------- sysutils  -----------

      - name: Install sysutils
        apt: pkg={{item}} state=present update-cache=yes force=yes install_recommends=no
        with_items:
          - megacli 
          - bridge-utils 
          - sysstat 
          - partimage 
          - debirf 
          - apt-file 
          - dump 
          - lxc 
          - cgroup-bin 
          - dkms 
          - hugepages 
          - cryptsetup 
          - cpu-checker
          - linux-tools-common 
          - hwloc 
          - htop 
          - build-essential 
          - build-essential 
          - nmap 
          - xfsprogs 
          - xfsdump 
          - attr 
          - quota 
          - udftools 
          - ipmitool 
          - numactl 

 #-------- vbox  -----------

       - name: Add vbox repo
         shell: echo "deb http://download.virtualbox.org/virtualbox/debian xenial contrib" > /etc/apt/sources.list.d/virtualbox.list

       - name: Add vbox 2016 key
         apt_key:
           url: https://www.virtualbox.org/download/oracle_vbox_2016.asc
           state: present

       - name: Add vbox key
         apt_key:
           url: https://www.virtualbox.org/download/oracle_vbox.asc
           state: present

       - name: Install Virtualbox
         apt: pkg={{item}} state=present update-cache=yes force=yes 
         with_items:
          - virtualbox-5.1

       - name: Download extension pack
         shell: cd /usr/share/virtualbox && wget http://download.virtualbox.org/virtualbox/5.1.18/Oracle_VM_VirtualBox_Extension_Pack-5.1.18-114002.vbox-extpack #&& VBoxManage --accept-license=715c7246dc0f779ceab39446812362b2f9bf64a55ed5d3a905f053cfab36da9e 
         args:
          creates: /usr/share/virtualbox/Oracle_VM_VirtualBox_Extension_Pack-5.1.18-114002.vbox-extpack

       - name: Install extension pack
         shell: cd /usr/share/virtualbox && VBoxManage extpack install /usr/share/virtualbox/Oracle_VM_VirtualBox_Extension_Pack-5.1.18-114002.vbox-extpack --accept-license=715c7246dc0f779ceab39446812362b2f9bf64a55ed5d3a905f053cfab36da9e


       - name: Setup vagrant with virtualbox
         shell: cd /tmp && wget https://releases.hashicorp.com/vagrant/1.9.3/vagrant_1.9.3_x86_64.deb && dpkg -i vagr* && rm vagr*


#-------- ntp-mill -----------

      - name: install ntp
        apt: pkg={{item}} state=present update-cache=yes force=yes 
        with_items:
          - ntp
          - ntpdate
      - name: Specify NTP server
        shell: sed -i '/^# Specify one or more NTP servers./,/^pool ntp.ubuntu.com/{//!d};s,pool ntp.ubuntu.com,server 169.229.48.63\nserver ntp1.net.berkeley.edu\nserver ntp2.net.berkeley.edu,' /etc/ntp.conf

      - name: Restart server
        service: 
          name: ntp 
          state: restarted

#-------- auth-mill -----------
      - name: Append to passwd
        lineinfile:
          dest: /etc/passwd
          line: '+@rise-l::::::'

      - name: Create sudoers
        file: 
          path: /etc/sudoers.d/root
          state: touch
          mode: 0440

      - name: Append to sudoers
        lineinfile:
          dest: /etc/sudoers.d/root
          line: '+amp-l     ALL=(ALL)       ALL'
      # - name: Change sudoers permissions
      #   file:
      #     path: /etc/sudoers.d/root
      #     state: file
      #     mode: 0440
      - name: Replace with mill
        shell: echo "mill" > /etc/defaultdomain


      - name: Append to nsswitch
        lineinfile:
          dest: /etc/nsswitch.conf
          line: "automount:      files nis"

      - name: nsswitch group
        shell: "sed -i 's,^group:.*,group:              files nis,;s,^shadow:.*,shadow:         compat,' /etc/nsswitch.conf"

      - name: install nis 
        apt: pkg={{item}} state=present update-cache=yes force=yes 
        with_items:
          - nis
          - autofs

#-------- fstab-mill -----------


      - name: Append to fstab 
        lineinfile:
          dest: /etc/fstab
          line: thumper:/export/work /work nfs vers=3 0 0
      
      - name: create work directory
        file:
          path: '/work'
          state: directory
          mode: 0700 


#-------- nfshome  -----------

    - name: Install nfs and autofs
      apt: pkg={{item}} state=present update-cache=yes force=yes
      with_items:
        - nfs-common
        - autofs

#-------- shells  -----------

     - name: Install shells
       apt: pkg={{item}} state=present update-cache=yes force=yes
       with_items:
        - fish
        - csh
        - tcsh
        - zsh

#-------- cleanup  -----------

    - name: Update all packages to the latest version
      apt:
        upgrade: dist
    - name: Remove dependencies that are no longer required
      apt:
        purge: yes
        autoremove: yes
    - name: Remove useless packages from the cache
      apt:
        autoclean: yes

    - name: Delete bin files
      shell: rm -f /var/cache/apt/*.bin

    - name: Delete everything in lists
      shell: rm -rf /var/lib/apt/lists/*

    - name: Create partial dir in lists
      file:
        path: /var/lib/apt/lists/partial
        state: directory

    - name: File update
      shell: apt-file update

    - name: upgrade packages
      apt:
        update_cache: yes
        upgrade: yes



    #------------------------------ Special  ----------------------

    #CUDA

    - name: Install cuda and lightdm
      apt: pkg={{item}} state=present update-cache=yes force=yes
      with_items:
        - cuda
        - lightdm

    - name: Check if cuda8 is installed
      command: dpkg-query -W cuda8       
      register: "cuda8_check_deb"
      failed_when: "cuda8_check_deb.rc > 1"
      changed_when: "cuda8_check_deb.rc == 1"


    - name: Download cuda 8
      get_url: 
        url: "http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb"
        dest: "/tmp"
      when: cuda8_check_deb.rc == 1

    - name: Install cuda 8
      apt: deb="/tmp/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb"
      when: cuda8_check_deb.rc == 1



      
    # - name: Download cuda 9
    #   get_url: 
    #    url="{{http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb }}"
    #    dest="/tmp"
    #   when: cuda9_check_deb.rc == 1

    
  #   - name: Install cuda9
  # apt: deb="/home/{{ ansible_env.USER }}/Downloads/{{ my_package_name }}.deb"
  # sudo: true
  # when: vagrant_check_deb.rc == 1


      # - name: Get cuda9 key
      #   apt_key:
      #     keyserver: keyserver.ubuntu.com
      #     id: 6005210E23B3D3B4
      #     state: present


#-------- label  -----------


 # - name: label root fs
 #        shell: e2label /dev/md0 root
 #    - name: change UUID to label
 #        shell: sed -i 's,^UUID=.*[[:space:]]/[[:space:]]+*,LABEL=root      /   ,' /etc/fstab
 #    - name: label volume partition
 #        shell: dosfslabel /dev/sdi2 ESP-A
    




